{"version":3,"sources":["webpack:///./chrome/Sidebar.jsx","webpack:///./chrome/src/highlighting.js"],"names":["App","findDomPath","el","currentNode","window","getSelection","anchorNode","parentElement","domPath","unshift","tagName","createHighlightedObj","string","toString","wholeDoc","document","documentElement","innerHTML","selObj","console","log","findToHighlight","path","str","selector","length","element","getElementsByTagName","i","currentEl","elPath","innerText","includes","join","style","elements"],"mappings":";;;;;;;;;AAAA;AACA;;AAEA,IAAMA,MAAM,SAANA,GAAM,GAAM;AAChB,SACA;AAAA;AAAA;AACE,gEAAC,uEAAD;AADF,GADA;AAKD,CAND;;eAQeA,G;AAAf;;;;;;;;gCARMA,G;;;;;;;;;;;;;;;;;;;;ACHN;AAAA;;AAEA,IAAMC,cAAc,SAAdA,WAAc,CAACC,EAAD,EAAQ;AAC1B,MAAIC,cAAcD,MAAME,OAAOC,YAAP,GAAsBC,UAAtB,CAAiCC,aAAzD;AACA,MAAIC,UAAU,EAAd;;AAEA,SAAOL,WAAP,EAAoB;AAClBK,YAAQC,OAAR,CAAgBN,YAAYO,OAA5B;AACAP,kBAAcA,YAAYI,aAA1B;AACD;;AAED,SAAOC,OAAP;AACD,CAVD;;AAYA;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGO,IAAMG,uBAAuB,SAAvBA,oBAAuB,GAAM;AACxC,MAAMC,SAASR,OAAOC,YAAP,GAAsBQ,QAAtB,EAAf;;AAEA,MAAMC,WAAWC,SAASC,eAAT,CAAyBC,SAA1C;AACA,MAAMT,UAAUP,aAAhB;;AAEA,MAAMiB,SAAU;AACdN,kBADc;AAEdE,sBAFc;AAGdN;AAHc,GAAhB;;AAMAW,UAAQC,GAAR,CAAYhB,OAAOC,YAAP,EAAZ;AACAc,UAAQC,GAAR,CAAYF,MAAZ;AAED,CAfM;;AAiBP;AACA;;AAEO,IAAMG,kBAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,GAAP,EAAe;AAC5C;AACA;AACA;;AAEA,MAAMC,WAAWF,KAAKA,KAAKG,MAAL,GAAc,CAAnB,CAAjB;AACA,MAAMC,UAAUX,SAASY,oBAAT,CAA8BH,QAA9B,CAAhB;;AAEA,OAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIF,QAAQD,MAA5B,EAAoCG,GAApC,EAAyC;AACvC,QAAMC,YAAYH,QAAQE,CAAR,CAAlB;AACA,QAAME,SAAS7B,YAAY4B,SAAZ,CAAf;;AAEA,QAAIH,QAAQE,CAAR,EAAWG,SAAX,CAAqBC,QAArB,CAA8BT,GAA9B,KAAsCO,OAAOG,IAAP,OAAkBX,KAAKW,IAAL,EAA5D,EAAyE;AACvEP,cAAQE,CAAR,EAAWM,KAAX,CAAiB,kBAAjB,IAAuC,QAAvC;AACD;AACF;AACF,CAhBM;;AAkBP,IAAMC,WAAWpB,SAASY,oBAAT,CAA8B,QAA9B,CAAjB;;AAEA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIO,SAASV,MAA7B,EAAqCG,GAArC,EAA0C;AACxC,MAAIO,SAASP,CAAT,EAAYG,SAAZ,CAAsBC,QAAtB,CAA+B,SAA/B,CAAJ,EAA+C;AAC7Cb,YAAQC,GAAR,CAAY,UAAZ,EAAwBe,SAASP,CAAT,CAAxB;AACD;AACF;;;;;;;;gCAjFK3B,W;;gCAqCOU,oB;;gCAoBAU,e;;gCAkBPc,Q;;gCAEGP,C","file":"0.6650005464bee6d262b1.hot-update.js","sourcesContent":["import React from 'react'\nimport Header from './src/components/header'\n\nconst App = () => {\n  return (\n  <div>\n    <Header />\n  </div>\n  )\n}\n\nexport default App\n\n\n\n// WEBPACK FOOTER //\n// ./chrome/Sidebar.jsx","//This function finds the path to the highlighted node (bottom-up)\n\nconst findDomPath = (el) => {\n  let currentNode = el || window.getSelection().anchorNode.parentElement;\n  let domPath = [];\n\n  while (currentNode) {\n    domPath.unshift(currentNode.tagName);\n    currentNode = currentNode.parentElement;\n  }\n\n  return domPath;\n};\n\n/*\n  We might need this function if the word we are looking to highlight occurs\n  more than once in the same HTML element, but the function currently doesn't work\n*/\n\n\n// const findOccurrenceNum = (path, str) => {\n//   let occurrences = [];\n//   const selector = path[path.length - 1];\n//   const element = document.getElementsByTagName(selector);\n\n//   for (var i = 0; i < element.length; i++) {\n//     const elPath = findDomPath(element[i]);\n//     if (elPath.join() === path.join() && element[i].innerText.includes(str)) {\n//       occurrences.push(element[i].className);\n//     }\n//   }\n//   console.log({occurrences});\n//   const selectedInd = window.getSelection().baseNode;\n//   console.log({selectedInd});\n\n//   return occurrences;\n// };\n\n\nexport const createHighlightedObj = () => {\n  const string = window.getSelection().toString();\n\n  const wholeDoc = document.documentElement.innerHTML;\n  const domPath = findDomPath();\n\n  const selObj  = {\n    string,\n    wholeDoc,\n    domPath,\n  };\n\n  console.log(window.getSelection());\n  console.log(selObj);\n\n};\n\n//This is the function that does the final search for the element\n// And highlights it\n\nexport const findToHighlight = (path, str) => {\n  //find a DOM element by text to string\n  //if the DOM element's path is the same as the path you're trying to target,\n  //highlight that value\n\n  const selector = path[path.length - 1];\n  const element = document.getElementsByTagName(selector);\n\n  for (var i = 0; i < element.length; i++) {\n    const currentEl = element[i];\n    const elPath = findDomPath(currentEl);\n\n    if (element[i].innerText.includes(str) && elPath.join() === path.join()) {\n      element[i].style['background-color'] = 'yellow';\n    }\n  }\n};\n\nconst elements = document.getElementsByTagName('strong');\n\nfor (var i = 0; i < elements.length; i++) {\n  if (elements[i].innerText.includes('unshift')) {\n    console.log('elements', elements[i]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./chrome/src/highlighting.js"],"sourceRoot":""}