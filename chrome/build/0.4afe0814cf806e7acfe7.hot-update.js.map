{"version":3,"sources":["webpack:///./chrome/Sidebar.jsx"],"names":["Sidebar","props","state","view","isQuestion","user","activeId","document","addEventListener","getElementsByClassName","length","classList","setState","setView","bind","selectEntryType","fetchHighlights","console","log","evt","preventDefault","type","target","value","shadowCSS","selectComponents","hlArr","UrlPages","firestore","collection","encodedDocUrl","urlEncode","location","href","doc","get","then","querySnapshot","forEach","push","highlight","data","id","map","markInstance","hl","domPath","mark","newString","acrossElements","separateWordSearch","className","catch","error"],"mappings":"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","file":"0.4afe0814cf806e7acfe7.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport ShadowDOM from 'react-shadow';\nimport Header from './src/components/Header';\nimport { firestore } from '~/fire';\nimport Mark from 'mark.js';\nimport HighlightAnnotations from './src/containers/HighlightAnnotations';\nimport AskOrAnnotate from './src/components/AskOrAnnotate';\n// import FindHighlights from './src/components/FindHighlights';\nimport CreateHighlights from './src/components/CreateHighlights';\nimport Login from './src/components/Login';\nimport shadowCSS from './src/shadow.css';\nimport { urlEncode } from './src/highlighting';\nimport { addEventListener } from './src/index.js';\n\n\n// Redux\nimport {Provider} from 'react-redux'\nimport store from '~/chrome/src/store'\n\nexport default class Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: '',\n      isQuestion: true,\n      user: '',\n      activeId: ''\n    };\n\n    document.addEventListener('click', () => {\n      if (document.getElementsByClassName('activeHighlight').length){\n        const activeId = document.getElementsByClassName('activeHighlight')[0].classList[1];\n        this.setState({ activeId }, () => {\n          // console.log('state inside', this.state);\n        });\n      }\n    });\n\n    this.setView = this.setView.bind(this);\n    this.selectEntryType = this.selectEntryType.bind(this);\n  }\n\n  componentDidMount() {\n    fetchHighlights();\n    console.log('component mounting....');\n  }\n\n\n  setView(view) {\n    this.setState({\n      view\n    });\n  }\n\n  //add components that are rendered depending on views here:\n  //to redirect switch views from your component pass the setView as props\n  //and change the view in your component's button, form etc.\n\n  selectComponents() {\n    switch (this.state.view) {\n      case 'login':\n        return <Login />;\n      case 'home':\n        return <CreateHighlights />;\n      case 'askOrAnnotate':\n        return <AskOrAnnotate selectEntryType={this.selectEntryType} />;\n      case 'submission':\n        return <CreateHighlights setView={this.setView} isQuestion={this.state.isQuestion}/>;\n      default:\n        return <HighlightAnnotations activeId={this.state.activeId}/>;\n    }\n  }\n\n  selectEntryType(evt) {\n    evt.preventDefault();\n    const type = evt.target.value;\n    this.setState({\n      isQuestion: type,\n      view: 'submission'\n    });\n    console.log('state: ', this.state);\n  }\n\n  //components that will always show got here in the render\n  //components that will be only rendered in certain views\n  //go above in the selectComponents functions' switch statement\n\n  render() {\n    return (\n      <ShadowDOM>\n        <div>\n          <Provider store={store}>\n            <div>\n            <style type=\"text/css\">{shadowCSS}</style>\n            <Header setView={this.setView} />\n            <div className=\"chromelights-main\">\n            {this.selectComponents()}\n            </div>\n            </div>\n          </Provider>\n        </div>\n      </ShadowDOM>\n    );\n  }\n}\n\n\nconst hlArr = [];\nconst UrlPages = firestore.collection('UrlPages');\n\nconst fetchHighlights = () => {\n  let encodedDocUrl = urlEncode(document.location.href);\n  //console.log('encoded URL:', encodedDocUrl);\n  UrlPages.doc(encodedDocUrl).collection('highlights').get()\n    .then(querySnapshot => {\n      //console.log('querysnapshot: ', querySnapshot);\n      querySnapshot.forEach(highlight => {\n        // console.log('highlight: ', highlight);\n        hlArr.push([highlight.data(), highlight.id]);\n      });\n      return 'next';\n    })\n    .then(() => {\n      // console.log('highlight arr: ', hlArr);\n      hlArr.map(hl => {\n        // console.log('in hl map', hl[1], hl[0]);\n        const markInstance = new Mark(hl[0].domPath);\n        markInstance.mark(hl[0].newString, {\n          acrossElements: true,\n          separateWordSearch: false,\n          className: `chromelights-highlights ${hl[1]}`\n        });\n      });\n    })\n    .then(() => {\n      addEventListener();\n    })\n    .catch(error => console.log('error: ', error));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./chrome/Sidebar.jsx"],"sourceRoot":""}